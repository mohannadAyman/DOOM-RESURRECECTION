#pragma once
const int ROWS = 25;
const int COLS = 10;
class Map
{


private:
    vector<vector<char>> arr =
    {
        { '1','1','1','1','1','1','1','1','1','1' },
        { '1','_','_','_','_','1','_','_','_','1' },
        { '1','_','_','_','_','1','1','_','_','1' },
        { '1','_','_','1','_','_','1','_','_','1' },
        { '1','_','_','1','_','_','_','_','_','1' },
        { '1','_','_','1','_','_','_','_','_','1' },
        { '1','_','_','1','1','1','1','_','_','1' },
        { '1','_','_','_','_','_','_','_','_','1' },
        { '1','_','_','_','_','_','_','_','_','1' },
        { '1','_','_','_','_','_','1','_','_','1' },
        { '1','_','1','_','_','_','1','_','_','1' },
        { '1','_','1','_','_','_','1','1','_','1' },
        { '1','1','1','_','_','_','_','1','_','1' },
        { '1','1','_','_','_','_','_','1','_','1' },
        { '1','1','1','1','1','_','1','1','_','1' },
        { '1','_','_','_','_','_','_','_','_','1' },
        { '1','_','_','_','_','_','_','_','_','1' },
        { '1','_','_','_','_','1','1','1','1','1' },
        { '1','_','1','_','_','1','_','_','_','1' },
        { '1','_','1','_','_','1','_','_','_','1' },
        { '1','_','1','1','1','1','_','_','_','1' },
        { '1','_','1','_','_','_','_','_','_','1' },
        { '1','_','_','_','_','_','_','_','_','1' },
        { '1','_','_','_','_','_','_','_','_','1' },
        { '1','1','1','1','1','1','1','1','1','1' }
    };
public:

    void init()
    {
        glClearColor(0.5, 0.5, 0.5, 1.0);
        glMatrixMode(GL_PROJECTION);
        gluOrtho2D(0.0, COLS, 0.0, ROWS);
    }

    void draw()
    {
        glClear(GL_COLOR_BUFFER_BIT);
        glColor3f(0.0, 0.0, 0.0);

        // draw squares in positions of the 1's
        for (int i = 0; i < ROWS; i++)
        {
            for (int j = 0; j < COLS; j++)
            {
                if (arr[i][j] == '1')
                {
                    glRecti(j, ROWS - i - 1, j + 1, ROWS - i);
                }
            }
        }

        glutSwapBuffers();
    }
};

